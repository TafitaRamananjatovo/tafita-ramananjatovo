"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/md-to-react-email";
exports.ids = ["vendor-chunks/md-to-react-email"];
exports.modules = {

/***/ "(action-browser)/./node_modules/md-to-react-email/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/md-to-react-email/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};\n        if (obj != null) {\n            for(var key in obj){\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    newObj[key] = obj[key];\n                }\n            }\n        }\n        newObj.default = obj;\n        return newObj;\n    }\n} // src/parser.ts\nvar _marked = __webpack_require__(/*! marked */ \"(action-browser)/./node_modules/marked/lib/marked.cjs\");\n// src/utils.ts\n// src/styles.ts\nvar emptyStyle = {};\nvar baseHeaderStyles = {\n    fontWeight: \"500\",\n    paddingTop: 20\n};\nvar h1 = {\n    ...baseHeaderStyles,\n    fontSize: \"2.5rem\"\n};\nvar h2 = {\n    ...baseHeaderStyles,\n    fontSize: \"2rem\"\n};\nvar h3 = {\n    ...baseHeaderStyles,\n    fontSize: \"1.75rem\"\n};\nvar h4 = {\n    ...baseHeaderStyles,\n    fontSize: \"1.5rem\"\n};\nvar h5 = {\n    ...baseHeaderStyles,\n    fontSize: \"1.25rem\"\n};\nvar h6 = {\n    ...baseHeaderStyles,\n    fontSize: \"1rem\"\n};\nvar bold = {\n    fontWeight: \"bold\"\n};\nvar italic = {\n    fontStyle: \"italic\"\n};\nvar blockQuote = {\n    background: \"#f9f9f9\",\n    borderLeft: \"10px solid #ccc\",\n    margin: \"1.5em 10px\",\n    padding: \"1em 10px\"\n};\nvar codeInline = {\n    color: \"#212529\",\n    fontSize: \"87.5%\",\n    display: \"inline\",\n    background: \" #f8f8f8\",\n    fontFamily: `SFMono-Regular,Menlo,Monaco,Consolas,monospace`\n};\nvar codeBlock = {\n    ...codeInline,\n    paddingTop: 10,\n    paddingRight: 10,\n    paddingLeft: 10,\n    paddingBottom: 1,\n    marginBottom: 20,\n    background: \" #f8f8f8\"\n};\nvar link = {\n    color: \"#007bff\",\n    textDecoration: \"underline\",\n    backgroundColor: \"transparent\"\n};\nvar styles = {\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    blockQuote,\n    bold,\n    italic,\n    link,\n    codeBlock: {\n        ...codeBlock,\n        wordWrap: \"break-word\"\n    },\n    codeInline: {\n        ...codeInline,\n        wordWrap: \"break-word\"\n    },\n    p: emptyStyle,\n    li: emptyStyle,\n    ul: emptyStyle,\n    ol: emptyStyle,\n    image: emptyStyle,\n    br: emptyStyle,\n    hr: emptyStyle,\n    table: emptyStyle,\n    thead: emptyStyle,\n    tbody: emptyStyle,\n    th: emptyStyle,\n    td: emptyStyle,\n    tr: emptyStyle,\n    strikethrough: emptyStyle\n};\n// src/utils.ts\nfunction escapeQuotes(value) {\n    if (typeof value === \"string\" && value.includes('\"')) {\n        return value.replace(/\"/g, \"&#x27;\");\n    }\n    return value;\n}\nfunction camelToKebabCase(str) {\n    return str.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\nfunction parseCssInJsToInlineCss(cssProperties) {\n    if (!cssProperties) return \"\";\n    const numericalCssProperties = [\n        \"width\",\n        \"height\",\n        \"margin\",\n        \"marginTop\",\n        \"marginRight\",\n        \"marginBottom\",\n        \"marginLeft\",\n        \"padding\",\n        \"paddingTop\",\n        \"paddingRight\",\n        \"paddingBottom\",\n        \"paddingLeft\",\n        \"borderWidth\",\n        \"borderTopWidth\",\n        \"borderRightWidth\",\n        \"borderBottomWidth\",\n        \"borderLeftWidth\",\n        \"outlineWidth\",\n        \"top\",\n        \"right\",\n        \"bottom\",\n        \"left\",\n        \"fontSize\",\n        \"lineHeight\",\n        \"letterSpacing\",\n        \"wordSpacing\",\n        \"maxWidth\",\n        \"minWidth\",\n        \"maxHeight\",\n        \"minHeight\",\n        \"borderRadius\",\n        \"borderTopLeftRadius\",\n        \"borderTopRightRadius\",\n        \"borderBottomLeftRadius\",\n        \"borderBottomRightRadius\",\n        \"textIndent\",\n        \"gridColumnGap\",\n        \"gridRowGap\",\n        \"gridGap\",\n        \"translateX\",\n        \"translateY\"\n    ];\n    return Object.entries(cssProperties).map(([property, value])=>{\n        if (typeof value === \"number\" && numericalCssProperties.includes(property)) {\n            return `${camelToKebabCase(property)}:${value}px`;\n        } else {\n            const escapedValue = escapeQuotes(value);\n            return `${camelToKebabCase(property)}:${escapedValue}`;\n        }\n    }).join(\";\");\n}\nvar initRenderer = ({ customStyles })=>{\n    const finalStyles = {\n        ...styles,\n        ...customStyles\n    };\n    const customRenderer = new (0, _marked.Renderer)();\n    customRenderer.blockquote = (quote)=>{\n        return `<blockquote${parseCssInJsToInlineCss(finalStyles.blockQuote) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.blockQuote)}\"` : \"\"}>\n${quote}</blockquote>\n`;\n    };\n    customRenderer.br = ()=>{\n        return `<br${parseCssInJsToInlineCss(finalStyles.br) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.br)}\"` : \"\"} />`;\n    };\n    customRenderer.code = (code)=>{\n        code = code.replace(/\\n$/, \"\") + \"\\n\";\n        return `<pre${parseCssInJsToInlineCss(finalStyles.codeBlock) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.codeBlock)}\"` : \"\"}><code>${code}</code></pre>\n`;\n    };\n    customRenderer.codespan = (text)=>{\n        return `<code${parseCssInJsToInlineCss(finalStyles.codeInline) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.codeInline)}\"` : \"\"}>${text}</code>`;\n    };\n    customRenderer.del = (text)=>{\n        return `<del${parseCssInJsToInlineCss(finalStyles.strikethrough) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.strikethrough)}\"` : \"\"}>${text}</del>`;\n    };\n    customRenderer.em = (text)=>{\n        return `<em${parseCssInJsToInlineCss(finalStyles.italic) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.italic)}\"` : \"\"}>${text}</em>`;\n    };\n    customRenderer.heading = (text, level)=>{\n        return `<h${level}${parseCssInJsToInlineCss(finalStyles[`h${level}`]) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles[`h${level}`])}\"` : \"\"}>${text}</h${level}>`;\n    };\n    customRenderer.hr = ()=>{\n        return `<hr${parseCssInJsToInlineCss(finalStyles.hr) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.hr)}\"` : \"\"} />\n`;\n    };\n    customRenderer.image = (href, _, text)=>{\n        return `<img src=\"${href}\" alt=\"${text}\"${parseCssInJsToInlineCss(finalStyles.image) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.image)}\"` : \"\"}>`;\n    };\n    customRenderer.link = (href, _, text)=>{\n        return `<a href=\"${href}\" target=\"_blank\"${parseCssInJsToInlineCss(finalStyles.link) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.link)}\"` : \"\"}>${text}</a>`;\n    };\n    customRenderer.list = (body, ordered, start)=>{\n        const type = ordered ? \"ol\" : \"ul\";\n        const startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : \"\";\n        const styles2 = parseCssInJsToInlineCss(finalStyles[ordered ? \"ol\" : \"ul\"]);\n        return \"<\" + type + startatt + `${styles2 !== \"\" ? ` style=\"${styles2}\"` : \"\"}>\n` + body + \"</\" + type + \">\\n\";\n    };\n    customRenderer.listitem = (text)=>{\n        return `<li${parseCssInJsToInlineCss(finalStyles.li) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.li)}\"` : \"\"}>${text}</li>\n`;\n    };\n    customRenderer.paragraph = (text)=>{\n        return `<p${parseCssInJsToInlineCss(finalStyles.p) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.p)}\"` : \"\"}>${text}</p>\n`;\n    };\n    customRenderer.strong = (text)=>{\n        return `<strong${parseCssInJsToInlineCss(finalStyles.bold) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.bold)}\"` : \"\"}>${text}</strong>`;\n    };\n    customRenderer.table = (header, body)=>{\n        if (body) body = `<tbody>${body}</tbody>`;\n        return `<table${parseCssInJsToInlineCss(finalStyles.table) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.table)}\"` : \"\"}>\n<thead${parseCssInJsToInlineCss(finalStyles.thead) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.thead)}\"` : \"\"}>\n${header}</thead>\n${body}</table>\n`;\n    };\n    customRenderer.tablecell = (content, flags)=>{\n        const type = flags.header ? \"th\" : \"td\";\n        const tag = flags.align ? `<${type} align=\"${flags.align}\"${parseCssInJsToInlineCss(finalStyles.td) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.td)}\"` : \"\"}>` : `<${type}${parseCssInJsToInlineCss(finalStyles.td) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.td)}\"` : \"\"}>`;\n        return tag + content + `</${type}>\n`;\n    };\n    customRenderer.tablerow = (content)=>{\n        return `<tr${parseCssInJsToInlineCss(finalStyles.tr) !== \"\" ? ` style=\"${parseCssInJsToInlineCss(finalStyles.tr)}\"` : \"\"}>\n${content}</tr>\n`;\n    };\n    return customRenderer;\n};\n// src/parser.ts\nvar MarkdownParser = class {\n    constructor({ customStyles }){\n        this.renderer = initRenderer({\n            customStyles\n        });\n    }\n    parse(markdown) {\n        return _marked.marked.parse(markdown, {\n            renderer: this.renderer\n        });\n    }\n};\n// src/parseMarkdownToJSX.ts\nvar parseMarkdownToJSX = ({ markdown, customStyles })=>{\n    const parser = new MarkdownParser({\n        customStyles\n    });\n    return parser.parse(markdown);\n};\n// src/components/emailMarkdown.tsx\nvar _react = __webpack_require__(/*! react */ \"(action-browser)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\nvar React = _interopRequireWildcard(_react);\nvar EmailMarkdown = ({ markdown, markdownCustomStyles, markdownContainerStyles })=>{\n    const parsedMarkdown = parseMarkdownToJSX({\n        markdown,\n        customStyles: markdownCustomStyles\n    });\n    return /* @__PURE__ */ React.createElement(\"div\", {\n        style: markdownContainerStyles,\n        dangerouslySetInnerHTML: {\n            __html: parsedMarkdown\n        }\n    });\n};\nexports.EmailMarkdown = EmailMarkdown;\nexports.camelToKebabCase = camelToKebabCase;\nexports.parseCssInJsToInlineCss = parseCssInJsToInlineCss;\nexports.parseMarkdownToJSX = parseMarkdownToJSX; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/md-to-react-email/dist/index.js\n");

/***/ })

};
;